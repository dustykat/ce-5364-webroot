{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# MT3DMS Problem 9\n",
    "\n",
    "This section is to recreate the example problems that were first described in the 1999 MT3DMS report, closely following [https://modflow6-examples.readthedocs.io/en/master/_notebooks/ex-gwt-mt3dms-p09.html](https://modflow6-examples.readthedocs.io/en/master/_notebooks/ex-gwt-mt3dms-p09.html).  \n",
    "\n",
    "The source  above demonstrates that the MF6 result and MT3D result are comparable.\n",
    "\n",
    "Ten example problems appear in the 1999 MT3DMS manual, starting on page 130. This notebook demonstrates example 9 from those ten examples.\n",
    "\n",
    ":::{note}\n",
    "Substantial rewrite, and some debugging to get the example to run on my computer.  A generic cut-and-paste from [https://modflow6-examples.readthedocs.io/en/master/_notebooks/ex-gwt-mt3dms-p09.html](https://modflow6-examples.readthedocs.io/en/master/_notebooks/ex-gwt-mt3dms-p09.html) is likely to be quite unsucessful.  I had to modify parts of the script for my machine (ie. to find the compiled binary).  And one object needed changing.  The example code at the link will probably work fine if your install is identical in terms of file paths as the GitHub source, and you have binaries in the correct locations. \n",
    "\n",
    "Herein the goal is simply to reverse engineer the workflow and plotting tools.  Later examples we will focus on actual modeling.\n",
    ":::\n",
    "\n",
    ":::{warning}\n",
    "The next two code cells are specific to my machine, the reset wipes the lernel memory when it attempts to build the notebook for caching and subsequent typesetting.  The `warnings ignore` turns off a lot of deprecation warnings.  The online reference is funny enough to share\n",
    "\n",
    "> You should just fix your code but just in case,\n",
    "\n",
    "```\n",
    "import warnings\n",
    "warnings.filterwarnings(\"ignore\", category=DeprecationWarning) \n",
    "```\n",
    "\n",
    ":::\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 208,
   "metadata": {},
   "outputs": [],
   "source": [
    "%reset -f"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 209,
   "metadata": {},
   "outputs": [],
   "source": [
    "import warnings\n",
    "warnings.filterwarnings('ignore',category=DeprecationWarning)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    ":::{note}\n",
    "The script generates a lot of output that are suppressed by a `;`  Comment the character out to re-enable full output (which is damn helpful for debugging the script!)\n",
    ":::\n",
    "\n",
    "## Initial setup\n",
    "\n",
    "Import dependencies, define the example name and workspace, and read settings from environment variables."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 210,
   "metadata": {},
   "outputs": [],
   "source": [
    "import os\n",
    "import pathlib as pl\n",
    "from pprint import pformat\n",
    "\n",
    "import flopy\n",
    "import git\n",
    "import matplotlib.pyplot as plt\n",
    "from matplotlib.colors import ListedColormap\n",
    "import numpy as np\n",
    "from flopy.plot.styles import styles\n",
    "from modflow_devtools.misc import get_env, timed\n",
    "import warnings\n",
    "warnings.filterwarnings('ignore',category=DeprecationWarning)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    ":::{note}\n",
    "The code block above loads various modules into the environment; they must exist and be loaded into the kernel - if not you get a warning \"Module Not Found\" and will have to install into the kernel (i.e. `pip -m install module`, or the `conda` equivalent\n",
    "Filter warnings repeated to achieve \"for sure ...\" that the filter is applied.  By design the filter will not stop ERRORS, and warnings issued within functions will still display, but it will address one annoying deprecation error.\n",
    ":::\n",
    "\n",
    "### Define parameters\n",
    "\n",
    "Define model units, parameters and other settings."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 211,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Model units\n",
    "length_units = \"meters\"\n",
    "time_units = \"seconds\"\n",
    "\n",
    "# Model parameters\n",
    "nlay = 1  # Number of layers\n",
    "nrow = 18  # Number of rows\n",
    "ncol = 14  # Number of columns\n",
    "delr = 100.0  # Column width ($m$)\n",
    "delc = 100.0  # Row width ($m$)\n",
    "delz = 10.0  # Layer thickness ($m$)\n",
    "top = 0.0  # Top of the model ($m$)\n",
    "prsity = 0.3  # Porosity\n",
    "k1 = 1.474e-4  # Horiz. hyd. conductivity of medium grain material ($m/sec$)\n",
    "k2 = 1.474e-7  # Horiz. hyd. conductivity of fine grain material ($m/sec$)\n",
    "inj = 0.001  # Injection well rate ($m^3/sec$)\n",
    "ext = -0.0189  # Extraction well pumping rate ($m^3/sec$)\n",
    "al = 20.0  # Longitudinal dispersivity ($m$)\n",
    "trpt = 0.2  # Ratio of horiz. transverse to longitudinal dispersivity ($m$)\n",
    "perlen = 2.0  # Simulation time ($years$)\n",
    "\n",
    "# Additional model input\n",
    "hk = k1 * np.ones((nlay, nrow, ncol), dtype=float)\n",
    "hk[:, 5:8, 1:8] = k2\n",
    "laytyp = icelltype = 0\n",
    "\n",
    "# Active model domain\n",
    "ibound = np.ones((nlay, nrow, ncol), dtype=int)\n",
    "ibound[0, 0, :] = -1\n",
    "ibound[0, -1, :] = -1\n",
    "idomain = np.ones((nlay, nrow, ncol), dtype=int)\n",
    "icbund = 1\n",
    "\n",
    "# Boundary conditions\n",
    "# MF2K5 pumping info\n",
    "qwell1 = 0.001\n",
    "qwell2 = -0.0189\n",
    "welspd = {0: [[0, 3, 6, qwell1], [0, 10, 6, qwell2]]}  # Well pumping info for MF2K5\n",
    "cwell1 = 57.87\n",
    "cwell0 = 0.0\n",
    "spd = {\n",
    "    0: [[0, 3, 6, cwell1, 2], [0, 10, 6, cwell0, 2]],\n",
    "    1: [[0, 3, 6, cwell0, 2], [0, 10, 6, cwell0, 2]],\n",
    "}  # Well info 4 MT3D\n",
    "# MF6 pumping information\n",
    "wellist_sp1 = []\n",
    "#                   (k,  i, j),   flow,  conc\n",
    "wellist_sp1.append([(0, 3, 6), qwell1, cwell1])  # Injection well\n",
    "wellist_sp1.append([(0, 10, 6), qwell2, cwell0])  # Pumping well\n",
    "#\n",
    "wellist_sp2 = []\n",
    "#                   (k,  i, j),   flow,  conc\n",
    "wellist_sp2.append([(0, 3, 6), qwell1, cwell0])  # Injection well\n",
    "wellist_sp2.append([(0, 10, 6), qwell2, cwell0])  # Pumping well\n",
    "spd_mf6 = {0: wellist_sp1, 1: wellist_sp2}\n",
    "\n",
    "# Transport related\n",
    "sconc = 0.0\n",
    "ath1 = al * trpt\n",
    "dmcoef = 0.0  # m^2/s\n",
    "# Time variables\n",
    "perlen = [365.0 * 86400, 365.0 * 86400]\n",
    "steady = [False, False]\n",
    "nper = len(perlen)\n",
    "nstp = [365, 365]\n",
    "tsmult = [1.0, 1.0]\n",
    "#\n",
    "sconc = 0.0\n",
    "c0 = 0.0\n",
    "botm = [top - delz]\n",
    "mixelm = -1\n",
    "\n",
    "# Solver settings\n",
    "nouter, ninner = 100, 300\n",
    "hclose, rclose, relax = 1e-6, 1e-6, 1.0\n",
    "percel = 1.0  # HMOC parameters\n",
    "itrack = 2\n",
    "wd = 0.5\n",
    "dceps = 1.0e-5\n",
    "nplane = 0\n",
    "npl = 0\n",
    "nph = 16\n",
    "npmin = 2\n",
    "npmax = 32\n",
    "dchmoc = 1.0e-3\n",
    "nlsink = nplane\n",
    "npsink = nph\n",
    "nadvfd = 1"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The code block above loads variables and constants to define the actual model.  We will focus on how to conceptualize later on."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {
    "lines_to_next_cell": 2
   },
   "source": [
    "## Model setup\n",
    "\n",
    "Define functions to build models, write input files, and run the simulation.\n",
    "\n",
    "**Groundwater Flow Package Build**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 212,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Workspace and Executibles\n",
    "binary = \"/home/sensei/ce-4363-webroot/ModflowExperimental/mf6-arm/mf6\"  # location on MY computer of the compiled modflow program\n",
    "workarea = \"/home/sensei/ce-4363-webroot/ModflowExperimental/mf6-arm/mt3d_example9\" # location on MY computer to store files this example (directory must already exist)\n",
    "#workarea = workspace # location on MY computer to store files this example (directory must already exist)\n",
    "\n",
    "# Set Simulation Name(s)\n",
    "name = \"mt3d_ex09\"\n",
    "gwfname = \"gwf-\" + name\n",
    "gwtname = \"gwt-\" + name\n",
    "\n",
    "##### FLOPY Build simulation framework ####\n",
    "sim = flopy.mf6.MFSimulation(\n",
    "    sim_name=\"sim-\" + name, exe_name=binary, version=\"mf6\", sim_ws=workarea\n",
    ")\n",
    "####### CREATED \"/home/sensei/ce-4363-webroot/ModflowExperimental/mf6-arm/mt3d_example9\""
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The code block above sets paths to the binary (in my case a compiled MODFLOW6 object located at `/home/sensei/ce-4363-webroot/ModflowExperimental/mf6-arm/`.   The binary was built using the `make` utility operating on the `makefile` contained in `~path_to_source/mf6.4.1_linux/make`"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 213,
   "metadata": {},
   "outputs": [],
   "source": [
    "####### Instantiating MODFLOW 6 time discretization ########\n",
    "tdis_rc = []\n",
    "for i in range(nper):\n",
    "    tdis_rc.append((perlen[i], nstp[i], tsmult[i]))\n",
    "flopy.mf6.ModflowTdis(sim, nper=nper, perioddata=tdis_rc, time_units=time_units);\n",
    "## delete \";\" in above line at end to show full output"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The code block above sets the time stepping structure.  Units are supplied in the model constants already created. `perlen` is a list of period length in time units of a stress period. , `nstp` is a list of the number of time steps per period, tsmult is a list of time step multipliers."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 214,
   "metadata": {},
   "outputs": [],
   "source": [
    "####### Instantiating MODFLOW 6 groundwater flow model ########\n",
    "# Set Model Name (using same base name as the simulation)\n",
    "model_nam_file = \"{}.nam\".format(gwfname)\n",
    "# create MODFLOW6 flow model framework\n",
    "gwf = flopy.mf6.ModflowGwf(sim, modelname=gwfname, save_flows=True, model_nam_file=model_nam_file);\n",
    "## delete \";\" in above line at end to show full output"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The code block above sets prefix of the model file names.  "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 215,
   "metadata": {},
   "outputs": [],
   "source": [
    "###### Instantiating MODFLOW 6 solver for flow model #######\n",
    "# Set Iterative Model Solution (choose solver parameters)\n",
    "# about IMS see: https://water.usgs.gov/nrp/gwsoftware/ModelMuse/Help/sms_sparse_matrix_solution_pac.htm\n",
    "# using defaults see: https://flopy.readthedocs.io/en/3.3.2/source/flopy.mf6.modflow.mfims.html\n",
    "imsgwf = flopy.mf6.ModflowIms(\n",
    "    sim,\n",
    "    print_option=\"SUMMARY\",\n",
    "    outer_dvclose=hclose,\n",
    "    outer_maximum=nouter,\n",
    "    under_relaxation=\"NONE\",\n",
    "    inner_maximum=ninner,\n",
    "    inner_dvclose=hclose,\n",
    "    rcloserecord=rclose,\n",
    "    linear_acceleration=\"CG\",\n",
    "    scaling_method=\"NONE\",\n",
    "    reordering_method=\"NONE\",\n",
    "    relaxation_factor=relax,\n",
    "    filename=f\"{gwfname}.ims\",\n",
    "    )\n",
    "sim.register_ims_package(imsgwf, [gwf.name]);\n",
    "## delete \";\" in above line at end to show full output"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The code block above sets the iteration and solver parameters.  URL to documents is included in the comments."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 216,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "package_name = dis\n",
       "filename = gwf-mt3d_ex09.dis\n",
       "package_type = dis\n",
       "model_or_simulation_package = model\n",
       "model_name = gwf-mt3d_ex09\n",
       "\n",
       "Block options\n",
       "--------------------\n",
       "length_units\n",
       "{internal}\n",
       "('meters')\n",
       "\n",
       "\n",
       "Block dimensions\n",
       "--------------------\n",
       "nlay\n",
       "{internal}\n",
       "(1)\n",
       "\n",
       "nrow\n",
       "{internal}\n",
       "(18)\n",
       "\n",
       "ncol\n",
       "{internal}\n",
       "(14)\n",
       "\n",
       "\n",
       "Block griddata\n",
       "--------------------\n",
       "delr\n",
       "{constant 100.0}\n",
       "\n",
       "delc\n",
       "{constant 100.0}\n",
       "\n",
       "top\n",
       "{constant 0.0}\n",
       "\n",
       "botm\n",
       "{constant -10.0}\n",
       "\n",
       "idomain\n",
       "{internal}\n",
       "(array([[[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]]))\n",
       "\n"
      ]
     },
     "execution_count": 216,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "###### Instantiating MODFLOW 6 discretization package ######\n",
    "flopy.mf6.ModflowGwfdis(\n",
    "    gwf,\n",
    "    length_units=length_units,\n",
    "    nlay=nlay,\n",
    "    nrow=nrow,\n",
    "    ncol=ncol,\n",
    "    delr=delr,\n",
    "    delc=delc,\n",
    "    top=top,\n",
    "    botm=botm,\n",
    "    idomain=idomain,\n",
    "    filename=f\"{gwfname}.dis\",\n",
    "    )#;\n",
    "## delete \";\" in above line at end to show full output"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 217,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "package_name = ic\n",
       "filename = gwf-mt3d_ex09.ic\n",
       "package_type = ic\n",
       "model_or_simulation_package = model\n",
       "model_name = gwf-mt3d_ex09\n",
       "\n",
       "Block griddata\n",
       "--------------------\n",
       "strt\n",
       "{internal}\n",
       "(array([[[250. , 250. , 250. , 250. , 250. , 250. , 250. , 250. , 250. ,\n",
       "         250. , 250. , 250. , 250. , 250. ],\n",
       "        [  0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,\n",
       "           0. ,   0. ,   0. ,   0. ,   0. ],\n",
       "        [  0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,\n",
       "           0. ,   0. ,   0. ,   0. ,   0. ],\n",
       "        [  0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,\n",
       "           0. ,   0. ,   0. ,   0. ,   0. ],\n",
       "        [  0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,\n",
       "           0. ,   0. ,   0. ,   0. ,   0. ],\n",
       "        [  0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,\n",
       "           0. ,   0. ,   0. ,   0. ,   0. ],\n",
       "        [  0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,\n",
       "           0. ,   0. ,   0. ,   0. ,   0. ],\n",
       "        [  0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,\n",
       "           0. ,   0. ,   0. ,   0. ,   0. ],\n",
       "        [  0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,\n",
       "           0. ,   0. ,   0. ,   0. ,   0. ],\n",
       "        [  0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,\n",
       "           0. ,   0. ,   0. ,   0. ,   0. ],\n",
       "        [  0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,\n",
       "           0. ,   0. ,   0. ,   0. ,   0. ],\n",
       "        [  0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,\n",
       "           0. ,   0. ,   0. ,   0. ,   0. ],\n",
       "        [  0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,\n",
       "           0. ,   0. ,   0. ,   0. ,   0. ],\n",
       "        [  0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,\n",
       "           0. ,   0. ,   0. ,   0. ,   0. ],\n",
       "        [  0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,\n",
       "           0. ,   0. ,   0. ,   0. ,   0. ],\n",
       "        [  0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,\n",
       "           0. ,   0. ,   0. ,   0. ,   0. ],\n",
       "        [  0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,   0. ,\n",
       "           0. ,   0. ,   0. ,   0. ,   0. ],\n",
       "        [ 20. ,  22.5,  25. ,  27.5,  30. ,  32.5,  35. ,  37.5,  40. ,\n",
       "          42.5,  45. ,  47.5,  50. ,  52.5]]]))\n",
       "\n"
      ]
     },
     "execution_count": 217,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "###### Instantiating MODFLOW 6 initial conditions package for flow model #######\n",
    "strt = np.zeros((nlay, nrow, ncol), dtype=float)\n",
    "strt[0, 0, :] = 250.0\n",
    "xc = gwf.modelgrid.xcellcenters\n",
    "for j in range(ncol):\n",
    "    strt[0, -1, j] = 20.0 + (xc[-1, j] - xc[-1, 0]) * 2.5 / 100\n",
    "flopy.mf6.ModflowGwfic(gwf, strt=strt, filename=f\"{gwfname}.ic\")#;\n",
    "## delete \";\" in above line at end to show full output"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 218,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "package_name = npf\n",
       "filename = gwf-mt3d_ex09.npf\n",
       "package_type = npf\n",
       "model_or_simulation_package = model\n",
       "model_name = gwf-mt3d_ex09\n",
       "\n",
       "Block options\n",
       "--------------------\n",
       "save_flows\n",
       "{internal}\n",
       "(False)\n",
       "\n",
       "save_specific_discharge\n",
       "{internal}\n",
       "(True)\n",
       "\n",
       "\n",
       "Block griddata\n",
       "--------------------\n",
       "icelltype\n",
       "{constant 0}\n",
       "\n",
       "k\n",
       "{internal}\n",
       "(array([[[1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-07, 1.474e-07, 1.474e-07, 1.474e-07,\n",
       "         1.474e-07, 1.474e-07, 1.474e-07, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-07, 1.474e-07, 1.474e-07, 1.474e-07,\n",
       "         1.474e-07, 1.474e-07, 1.474e-07, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-07, 1.474e-07, 1.474e-07, 1.474e-07,\n",
       "         1.474e-07, 1.474e-07, 1.474e-07, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04]]]))\n",
       "\n",
       "k33\n",
       "{internal}\n",
       "(array([[[1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-07, 1.474e-07, 1.474e-07, 1.474e-07,\n",
       "         1.474e-07, 1.474e-07, 1.474e-07, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-07, 1.474e-07, 1.474e-07, 1.474e-07,\n",
       "         1.474e-07, 1.474e-07, 1.474e-07, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-07, 1.474e-07, 1.474e-07, 1.474e-07,\n",
       "         1.474e-07, 1.474e-07, 1.474e-07, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04],\n",
       "        [1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04,\n",
       "         1.474e-04, 1.474e-04, 1.474e-04, 1.474e-04]]]))\n",
       "\n"
      ]
     },
     "execution_count": 218,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Instantiating MODFLOW 6 node-property flow package\n",
    "flopy.mf6.ModflowGwfnpf(\n",
    "    gwf,\n",
    "    save_flows=False,\n",
    "    icelltype=icelltype,\n",
    "    k=hk,\n",
    "    k33=hk,\n",
    "    save_specific_discharge=True,\n",
    "    filename=f\"{gwfname}.npf\",\n",
    "    )#;\n",
    "## delete \";\" in above line at end to show full output"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 219,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Instantiate storage package\n",
    "sto = flopy.mf6.ModflowGwfsto(gwf, ss=1.0e-05)#;\n",
    "## delete \";\" in above line at end to show full output"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 220,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "package_name = chd-1\n",
       "filename = gwf-mt3d_ex09.chd\n",
       "package_type = chd\n",
       "model_or_simulation_package = model\n",
       "model_name = gwf-mt3d_ex09\n",
       "\n",
       "Block options\n",
       "--------------------\n",
       "auxiliary\n",
       "{internal}\n",
       "(rec.array([('auxiliary', 'CONCENTRATION')],\n",
       "          dtype=[('auxiliary_0', 'O'), ('auxiliary_1', 'O')]))\n",
       "\n",
       "save_flows\n",
       "{internal}\n",
       "(False)\n",
       "\n",
       "\n",
       "Block dimensions\n",
       "--------------------\n",
       "maxbound\n",
       "{internal}\n",
       "(1)\n",
       "\n",
       "\n",
       "Block period\n",
       "--------------------\n",
       "stress_period_data\n",
       "{internal}\n",
       "(rec.array([((0, 0, 0), 250. , 0.), ((0, 17, 0),  20. , 0.),\n",
       "           ((0, 0, 1), 250. , 0.), ((0, 17, 1),  22.5, 0.),\n",
       "           ((0, 0, 2), 250. , 0.), ((0, 17, 2),  25. , 0.),\n",
       "           ((0, 0, 3), 250. , 0.), ((0, 17, 3),  27.5, 0.),\n",
       "           ((0, 0, 4), 250. , 0.), ((0, 17, 4),  30. , 0.),\n",
       "           ((0, 0, 5), 250. , 0.), ((0, 17, 5),  32.5, 0.),\n",
       "           ((0, 0, 6), 250. , 0.), ((0, 17, 6),  35. , 0.),\n",
       "           ((0, 0, 7), 250. , 0.), ((0, 17, 7),  37.5, 0.),\n",
       "           ((0, 0, 8), 250. , 0.), ((0, 17, 8),  40. , 0.),\n",
       "           ((0, 0, 9), 250. , 0.), ((0, 17, 9),  42.5, 0.),\n",
       "           ((0, 0, 10), 250. , 0.), ((0, 17, 10),  45. , 0.),\n",
       "           ((0, 0, 11), 250. , 0.), ((0, 17, 11),  47.5, 0.),\n",
       "           ((0, 0, 12), 250. , 0.), ((0, 17, 12),  50. , 0.),\n",
       "           ((0, 0, 13), 250. , 0.), ((0, 17, 13),  52.5, 0.)],\n",
       "          dtype=[('cellid', 'O'), ('head', '<f8'), ('CONCENTRATION', '<f8')]))\n",
       "\n"
      ]
     },
     "execution_count": 220,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Instantiating MODFLOW 6 constant head package\n",
    "# MF6 constant head boundaries:\n",
    "chdspd = []\n",
    "# Loop through the top & bottom sides.\n",
    "for j in np.arange(ncol):\n",
    "        #               l,  r, c,  head, conc\n",
    "    chdspd.append([(0, 0, j), 250.0, 0.0])  # Top boundary\n",
    "    hd = 20.0 + (xc[-1, j] - xc[-1, 0]) * 2.5 / 100\n",
    "    chdspd.append([(0, 17, j), hd, 0.0])  # Bottom boundary\n",
    "chdspd = {0: chdspd}\n",
    "\n",
    "flopy.mf6.ModflowGwfchd(\n",
    "    gwf,\n",
    "    maxbound=len(chdspd),\n",
    "    stress_period_data=chdspd,\n",
    "    save_flows=False,\n",
    "    auxiliary=\"CONCENTRATION\",\n",
    "    pname=\"CHD-1\",\n",
    "    filename=f\"{gwfname}.chd\",\n",
    "    )#;\n",
    "## delete \";\" in above line at end to show full output"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 221,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "package_name = wel-1\n",
       "filename = gwf-mt3d_ex09.wel\n",
       "package_type = wel\n",
       "model_or_simulation_package = model\n",
       "model_name = gwf-mt3d_ex09\n",
       "\n",
       "Block options\n",
       "--------------------\n",
       "auxiliary\n",
       "{internal}\n",
       "(rec.array([('auxiliary', 'CONCENTRATION')],\n",
       "          dtype=[('auxiliary_0', 'O'), ('auxiliary_1', 'O')]))\n",
       "\n",
       "print_input\n",
       "{internal}\n",
       "(True)\n",
       "\n",
       "print_flows\n",
       "{internal}\n",
       "(True)\n",
       "\n",
       "save_flows\n",
       "{internal}\n",
       "(False)\n",
       "\n",
       "\n",
       "Block period\n",
       "--------------------\n",
       "stress_period_data\n",
       "{internal}\n",
       "(rec.array([((0, 3, 6),  0.001 , 0.), ((0, 10, 6), -0.0189, 0.)],\n",
       "          dtype=[('cellid', 'O'), ('q', '<f8'), ('CONCENTRATION', '<f8')]))\n",
       "\n"
      ]
     },
     "execution_count": 221,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Instantiate the wel package\n",
    "flopy.mf6.ModflowGwfwel(\n",
    "    gwf,\n",
    "    print_input=True,\n",
    "    print_flows=True,\n",
    "    stress_period_data=spd_mf6,\n",
    "    save_flows=False,\n",
    "    auxiliary=\"CONCENTRATION\",\n",
    "    pname=\"WEL-1\",\n",
    "    filename=f\"{gwfname}.wel\",\n",
    "    )#;\n",
    "## delete \";\" in above line at end to show full output"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 222,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "package_name = oc\n",
       "filename = gwf-mt3d_ex09.oc\n",
       "package_type = oc\n",
       "model_or_simulation_package = model\n",
       "model_name = gwf-mt3d_ex09\n",
       "\n",
       "Block options\n",
       "--------------------\n",
       "budget_filerecord\n",
       "{internal}\n",
       "(rec.array([('gwf-mt3d_ex09.bud',)],\n",
       "          dtype=[('budgetfile', 'O')]))\n",
       "\n",
       "head_filerecord\n",
       "{internal}\n",
       "(rec.array([('gwf-mt3d_ex09.hds',)],\n",
       "          dtype=[('headfile', 'O')]))\n",
       "\n",
       "headprintrecord\n",
       "{internal}\n",
       "(rec.array([('COLUMNS', 10, 'WIDTH', 15, 'DIGITS', 6, 'GENERAL')],\n",
       "          dtype=[('columns_label', 'O'), ('columns', '<i8'), ('width_label', 'O'), ('width', '<i8'), ('digits_label', 'O'), ('digits', '<i8'), ('format', 'O')]))\n",
       "\n",
       "\n",
       "Block period\n",
       "--------------------\n",
       "saverecord\n",
       "{internal}\n",
       "(rec.array([('HEAD', 'LAST', None), ('BUDGET', 'LAST', None)],\n",
       "          dtype=[('rtype', 'O'), ('ocsetting', 'O'), ('ocsetting_data', 'O')]))\n",
       "\n",
       "printrecord\n",
       "{internal}\n",
       "(rec.array([('HEAD', 'LAST', None), ('BUDGET', 'LAST', None)],\n",
       "          dtype=[('rtype', 'O'), ('ocsetting', 'O'), ('ocsetting_data', 'O')]))\n",
       "\n"
      ]
     },
     "execution_count": 222,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Instantiating MODFLOW 6 output control package for flow model\n",
    "flopy.mf6.ModflowGwfoc(\n",
    "    gwf,\n",
    "    head_filerecord=f\"{gwfname}.hds\",\n",
    "    budget_filerecord=f\"{gwfname}.bud\",\n",
    "    headprintrecord=[(\"COLUMNS\", 10, \"WIDTH\", 15, \"DIGITS\", 6, \"GENERAL\")],\n",
    "    saverecord=[(\"HEAD\", \"LAST\"), (\"BUDGET\", \"LAST\")],\n",
    "    printrecord=[(\"HEAD\", \"LAST\"), (\"BUDGET\", \"LAST\")],\n",
    "    )#;\n",
    "## delete \";\" in above line at end to show full output"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "\n",
    "\n",
    "**Transport Package Building**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 223,
   "metadata": {},
   "outputs": [],
   "source": [
    "###### Instantiating MODFLOW 6 groundwater transport package ##########\n",
    "gwtname = \"gwt-\" + name\n",
    "gwt = flopy.mf6.MFModel(\n",
    "    sim,\n",
    "    model_type=\"gwt6\",\n",
    "    modelname=gwtname,\n",
    "    model_nam_file=f\"{gwtname}.nam\",\n",
    "    )#;\n",
    "## delete \";\" in above line at end to show full output\n",
    "gwt.name_file.save_flows = True"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 224,
   "metadata": {},
   "outputs": [],
   "source": [
    "# create iterative model solution and register the gwt model with it\n",
    "imsgwt = flopy.mf6.ModflowIms(\n",
    "    sim,\n",
    "    print_option=\"SUMMARY\",\n",
    "    outer_dvclose=hclose,\n",
    "    outer_maximum=nouter,\n",
    "    under_relaxation=\"NONE\",\n",
    "    inner_maximum=ninner,\n",
    "    inner_dvclose=hclose,\n",
    "    rcloserecord=rclose,\n",
    "    linear_acceleration=\"BICGSTAB\",\n",
    "    scaling_method=\"NONE\",\n",
    "    reordering_method=\"NONE\",\n",
    "    relaxation_factor=relax,\n",
    "    filename=f\"{gwtname}.ims\",\n",
    "    )\n",
    "sim.register_ims_package(imsgwt, [gwt.name])#;\n",
    "## delete \";\" in above line at end to show full output"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 225,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "package_name = dis\n",
       "filename = gwt-mt3d_ex09.dis\n",
       "package_type = dis\n",
       "model_or_simulation_package = model\n",
       "model_name = gwt-mt3d_ex09\n",
       "\n",
       "Block dimensions\n",
       "--------------------\n",
       "nlay\n",
       "{internal}\n",
       "(1)\n",
       "\n",
       "nrow\n",
       "{internal}\n",
       "(18)\n",
       "\n",
       "ncol\n",
       "{internal}\n",
       "(14)\n",
       "\n",
       "\n",
       "Block griddata\n",
       "--------------------\n",
       "delr\n",
       "{constant 100.0}\n",
       "\n",
       "delc\n",
       "{constant 100.0}\n",
       "\n",
       "top\n",
       "{constant 0.0}\n",
       "\n",
       "botm\n",
       "{constant -10.0}\n",
       "\n",
       "idomain\n",
       "{internal}\n",
       "(array([[[1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1],\n",
       "        [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]]]))\n",
       "\n"
      ]
     },
     "execution_count": 225,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "###### Instantiating MODFLOW 6 transport discretization package #####\n",
    "flopy.mf6.ModflowGwtdis(\n",
    "    gwt,\n",
    "    nlay=nlay,\n",
    "    nrow=nrow,\n",
    "    ncol=ncol,\n",
    "    delr=delr,\n",
    "    delc=delc,\n",
    "    top=top,\n",
    "    botm=botm,\n",
    "    idomain=idomain,\n",
    "    filename=f\"{gwtname}.dis\",\n",
    "    )#;\n",
    "## delete \";\" in above line at end to show full output"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 226,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "package_name = ic\n",
       "filename = gwt-mt3d_ex09.ic\n",
       "package_type = ic\n",
       "model_or_simulation_package = model\n",
       "model_name = gwt-mt3d_ex09\n",
       "\n",
       "Block griddata\n",
       "--------------------\n",
       "strt\n",
       "{constant 0.0}\n",
       "\n"
      ]
     },
     "execution_count": 226,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Instantiating MODFLOW 6 transport initial concentrations\n",
    "flopy.mf6.ModflowGwtic(gwt, strt=sconc, filename=f\"{gwtname}.ic\")#;\n",
    "## delete \";\" in above line at end to show full output"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 227,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "package_name = adv\n",
       "filename = gwt-mt3d_ex09.adv\n",
       "package_type = adv\n",
       "model_or_simulation_package = model\n",
       "model_name = gwt-mt3d_ex09\n",
       "\n",
       "Block options\n",
       "--------------------\n",
       "scheme\n",
       "{internal}\n",
       "('tvd')\n",
       "\n"
      ]
     },
     "execution_count": 227,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "    # Instantiating MODFLOW 6 transport advection package\n",
    "    if mixelm >= 0:\n",
    "        scheme = \"UPSTREAM\"\n",
    "    elif mixelm == -1:\n",
    "        scheme = \"TVD\"\n",
    "    else:\n",
    "        raise Exception()\n",
    "    flopy.mf6.ModflowGwtadv(gwt, scheme=scheme, filename=f\"{gwtname}.adv\")#;\n",
    "## delete \";\" in above line at end to show full output"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 228,
   "metadata": {},
   "outputs": [],
   "source": [
    "# Instantiating MODFLOW 6 transport dispersion package\n",
    "if al != 0:\n",
    "    flopy.mf6.ModflowGwtdsp(\n",
    "        gwt,\n",
    "        alh=al,\n",
    "        ath1=ath1,\n",
    "        filename=f\"{gwtname}.dsp\",\n",
    "        )#;\n",
    "## delete \";\" in above line at end to show full output"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 229,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "package_name = mst\n",
       "filename = gwt-mt3d_ex09.mst\n",
       "package_type = mst\n",
       "model_or_simulation_package = model\n",
       "model_name = gwt-mt3d_ex09\n",
       "\n",
       "Block options\n",
       "--------------------\n",
       "first_order_decay\n",
       "{internal}\n",
       "(False)\n",
       "\n",
       "\n",
       "Block griddata\n",
       "--------------------\n",
       "porosity\n",
       "{constant 0.3}\n",
       "\n"
      ]
     },
     "execution_count": 229,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Instantiating MODFLOW 6 transport mass storage package\n",
    "flopy.mf6.ModflowGwtmst(\n",
    "    gwt,\n",
    "    porosity=prsity,\n",
    "    first_order_decay=False,\n",
    "    decay=None,\n",
    "    decay_sorbed=None,\n",
    "    sorption=None,\n",
    "    bulk_density=None,\n",
    "    distcoef=None,\n",
    "    filename=f\"{gwtname}.mst\",\n",
    "    )#;\n",
    "## delete \";\" in above line at end to show full output"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 230,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "package_name = ssm\n",
       "filename = gwt-mt3d_ex09.ssm\n",
       "package_type = ssm\n",
       "model_or_simulation_package = model\n",
       "model_name = gwt-mt3d_ex09\n",
       "\n",
       "Block options\n",
       "--------------------\n",
       "print_flows\n",
       "{internal}\n",
       "(True)\n",
       "\n",
       "\n",
       "Block sources\n",
       "--------------------\n",
       "sources\n",
       "{internal}\n",
       "(rec.array([('WEL-1', 'AUX', 'CONCENTRATION'),\n",
       "           ('CHD-1', 'AUX', 'CONCENTRATION')],\n",
       "          dtype=[('pname', 'O'), ('srctype', 'O'), ('auxname', 'O')]))\n",
       "\n"
      ]
     },
     "execution_count": 230,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Instantiating MODFLOW 6 transport source-sink mixing package\n",
    "sourcerecarray = [\n",
    "    (\"WEL-1\", \"AUX\", \"CONCENTRATION\"),\n",
    "    (\"CHD-1\", \"AUX\", \"CONCENTRATION\"),\n",
    "    ]\n",
    "flopy.mf6.ModflowGwtssm(\n",
    "    gwt,\n",
    "    sources=sourcerecarray,\n",
    "    print_flows=True,\n",
    "    filename=f\"{gwtname}.ssm\",\n",
    "    )#;\n",
    "## delete \";\" in above line at end to show full output"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 231,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "package_name = oc\n",
       "filename = gwt-mt3d_ex09.oc\n",
       "package_type = oc\n",
       "model_or_simulation_package = model\n",
       "model_name = gwt-mt3d_ex09\n",
       "\n",
       "Block options\n",
       "--------------------\n",
       "budget_filerecord\n",
       "{internal}\n",
       "(rec.array([('gwt-mt3d_ex09.cbc',)],\n",
       "          dtype=[('budgetfile', 'O')]))\n",
       "\n",
       "concentration_filerecord\n",
       "{internal}\n",
       "(rec.array([('gwt-mt3d_ex09.ucn',)],\n",
       "          dtype=[('concentrationfile', 'O')]))\n",
       "\n",
       "concentrationprintrecord\n",
       "{internal}\n",
       "(rec.array([('COLUMNS', 10, 'WIDTH', 15, 'DIGITS', 6, 'GENERAL')],\n",
       "          dtype=[('columns_label', 'O'), ('columns', '<i8'), ('width_label', 'O'), ('width', '<i8'), ('digits_label', 'O'), ('digits', '<i8'), ('format', 'O')]))\n",
       "\n",
       "\n",
       "Block period\n",
       "--------------------\n",
       "saverecord\n",
       "{internal}\n",
       "(rec.array([('CONCENTRATION', 'LAST', None), ('BUDGET', 'LAST', None)],\n",
       "          dtype=[('rtype', 'O'), ('ocsetting', 'O'), ('ocsetting_data', 'O')]))\n",
       "\n",
       "printrecord\n",
       "{internal}\n",
       "(rec.array([('CONCENTRATION', 'LAST', None), ('BUDGET', 'LAST', None)],\n",
       "          dtype=[('rtype', 'O'), ('ocsetting', 'O'), ('ocsetting_data', 'O')]))\n",
       "\n"
      ]
     },
     "execution_count": 231,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Instantiating MODFLOW 6 transport output control package\n",
    "flopy.mf6.ModflowGwtoc(\n",
    "    gwt,\n",
    "    budget_filerecord=f\"{gwtname}.cbc\",\n",
    "    concentration_filerecord=f\"{gwtname}.ucn\",\n",
    "    concentrationprintrecord=[(\"COLUMNS\", 10, \"WIDTH\", 15, \"DIGITS\", 6, \"GENERAL\")],\n",
    "    saverecord=[(\"CONCENTRATION\", \"LAST\"), (\"BUDGET\", \"LAST\")],\n",
    "    printrecord=[(\"CONCENTRATION\", \"LAST\"), (\"BUDGET\", \"LAST\")],\n",
    "    filename=f\"{gwtname}.oc\",\n",
    "    )"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  },
  {
   "cell_type": "code",
   "execution_count": 232,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "package_name = mt3d_ex09.gwfgwt\n",
       "filename = mt3d_ex09.gwfgwt\n",
       "package_type = gwfgwt\n",
       "model_or_simulation_package = simulation\n",
       "simulation_name = sim-mt3d_ex09\n"
      ]
     },
     "execution_count": 232,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Instantiating MODFLOW 6 flow-transport exchange mechanism\n",
    "flopy.mf6.ModflowGwfgwt(\n",
    "    sim,\n",
    "    exgtype=\"GWF6-GWT6\",\n",
    "    exgmnamea=gwfname,\n",
    "    exgmnameb=gwtname,\n",
    "    filename=f\"{name}.gwfgwt\",\n",
    "    )"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Generate the Files**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 233,
   "metadata": {},
   "outputs": [],
   "source": [
    "sim.write_simulation(silent=True)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Running the Model** "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 234,
   "metadata": {},
   "outputs": [],
   "source": [
    "success, buff = sim.run_simulation(silent=True, report=True)\n",
    "assert success, pformat(buff)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Plotting results\n",
    "\n",
    "Define functions to plot model results."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 272,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 2100x1500 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "# Figure properties\n",
    "figure_size = (7, 5)\n",
    "# Get the MF6 concentration output\n",
    "gwt = sim.get_model(list(sim.model_names)[1])\n",
    "ucnobj_mf6 = gwt.output.concentration()\n",
    "conc_mf6 = ucnobj_mf6.get_alldata()\n",
    "\n",
    "\n",
    "# Create figure for scenario\n",
    "with styles.USGSPlot() as fs:\n",
    "    sim_name = sim.name\n",
    "    plt.rcParams[\"lines.dashed_pattern\"] = [5.0, 5.0]\n",
    "    levels = np.arange(0.2, 10, 0.4)\n",
    "    stp_idx = 0  # 0-based (out of 2 possible stress periods)\n",
    "# Plot after 8 years\n",
    "    axWasNone = False\n",
    "#    if ax is None:\n",
    "    fig = plt.figure(figsize=figure_size, dpi=300, tight_layout=True)\n",
    "    ax = fig.add_subplot(1, 2, 1, aspect=\"equal\")\n",
    "    axWasNone = True\n",
    "\n",
    "    ax = fig.add_subplot(1, 2, 1, aspect=\"equal\")\n",
    "    cflood = np.ma.masked_less_equal(conc_mf6[stp_idx], 0.2)\n",
    "    mm = flopy.plot.PlotMapView(ax=ax, model=gwf)\n",
    "    cmap.set_bad(color='none')\n",
    "    colors = ['saddlebrown', 'goldenrod']\n",
    "    cmap = ListedColormap(colors)\n",
    "    #mm.plot_array(hk, masked_values=[hk[0, 0, 0]], alpha=0.8, cmap = cmap)\n",
    "    mm.plot_array(hk, alpha=0.5, cmap = cmap)\n",
    "    mm.plot_ibound()\n",
    "    mm.plot_grid(color=\".5\", alpha=0.2)\n",
    "    cmap = plt.get_cmap('RdYlGn_r')\n",
    "    cmap.set_bad(color='none')\n",
    "    cs = mm.plot_array(cflood[0],  alpha=1.0, vmin=0, vmax=3, cmap = cmap)\n",
    "    cs = mm.contour_array(conc_mf6[stp_idx], colors=\"k\", levels=levels, linewidths=0.5)\n",
    "    plt.clabel(cs, fmt='%.2f')\n",
    "    plt.xlabel(\"Distance Along X-Axis, in meters\")\n",
    "    plt.ylabel(\"Distance Along Y-Axis, in meters\")\n",
    "\n",
    "    title = \"MF6 - End of Stress Period \" + str(stp_idx + 1)\n",
    "# set idx\n",
    "    idx = 0\n",
    "    letter = chr(ord(\"@\") + idx + 1)\n",
    "    styles.heading(letter=letter, heading=title)\n",
    "    \n",
    "# second stress period\n",
    "    stp_idx = 1  # 0-based (out of 2 possible stress periods)\n",
    "    if axWasNone:\n",
    "        ax = fig.add_subplot(1, 2, 2, aspect=\"equal\")\n",
    "    cflood = np.ma.masked_less_equal(conc_mf6[stp_idx], 0.2)\n",
    "    mm = flopy.plot.PlotMapView(ax=ax, model=gwf)\n",
    "    colors = ['saddlebrown', 'goldenrod']\n",
    "    cmap = ListedColormap(colors)\n",
    "    #mm.plot_array(hk, masked_values=[hk[0, 0, 0]], alpha=0.8, cmap = cmap)\n",
    "    mm.plot_array(hk, alpha=0.5, cmap = cmap)\n",
    "    mm.plot_ibound()\n",
    "    mm.plot_grid(color=\".5\", alpha=0.2)\n",
    "    cmap = plt.get_cmap('RdYlGn_r')\n",
    "    cmap.set_bad(color='none')\n",
    "    cs = mm.plot_array(cflood[0], alpha=0.5, vmin=0, vmax=3, cmap = cmap)\n",
    "    cs = mm.contour_array(conc_mf6[stp_idx], colors=\"k\", levels=levels, linewidths=0.5)\n",
    "    plt.clabel(cs, fmt='%.2f')\n",
    "    plt.xlabel(\"Distance Along X-Axis, in meters\")\n",
    "    plt.ylabel(\"Distance Along Y-Axis, in meters\")\n",
    "\n",
    "    title = \"MF6 - End of Stress Period \" + str(stp_idx + 1)\n",
    "# set idx\n",
    "    idx = 1\n",
    "    letter = chr(ord(\"@\") + idx + 1)\n",
    "    styles.heading(letter=letter, heading=title)\n",
    "\n",
    "        "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In the figures above, the brown rectangle contained within the goldenrod rectangle represent two different horizontal hydraulic conductivities. The goldenrod color represents the conductivity of a medium grain material, $K_1 = 1.474\\times 10^{-4}~\\frac{m}{sec}$. The brown color represents theconductivity of a fine grain material, $K_2 = 1.474 \\times 10^{-7}~\\frac{m}{sec}$.\n",
    "\n",
    "The plume \"color map\" is overlain on the material property map, and is set to opaque (not transparent).  The color ramp is and inverted GreenYellowRed.  High values render as red, lowest as green."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
